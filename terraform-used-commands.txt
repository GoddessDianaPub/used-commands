# Inizializes terraform in a specific folder
terraform init

# Checks the syntax in all the files
terraform validate

# Lists the resources that are going to be created / changed
terraform plan

# This will save the plan into a readable file called output.txt
terraform plan -no-color > plan_output.txt

# Creates / changes the provider enviroment's cloud specified
terraform apply

# Skips interactive approval of plan before applying
terraform apply -auto-approve

# Prints out the state of your Terraform resources
terraform show

# Lists the resources in your configuration
terraform state list

# To see the output of the formated file
terraform fmt -write=false
terraform fmt -write=false <file name>
terraform fmt -write=false <folder name>

# To apply the standard formatting
terraform fmt -write
terraform fmt -write <file name>
terraform fmt -write <folder name>

# Shows the diffrence of changes between the original and formatted versions (doesn't format it)
terraform fmt -diff
terraform fmt -diff <file name>
terraform fmt -diff <folder name>

# Rewrites (format) terraform configuration files to a canonical format and style (by default it scans the current directory)
terraform fmt  #(formats all the files in the current directory)
terraform fmt -target=<file name>
terraform fmt -target=<folder name>

# Cleans up your infrastructure
terraform destroy

# Skips interactive approval of plan before destroying your infrastructure
terraform destroy -auto-approve

# Plans any changes, but targets only a specfic resource in your main.tf
terraform plan -target="<specific resource>"
terraform plan -target="aws_s3_object.objects[2]"

# Applies any changes, but targets only a specfic resource in your main.tf
terraform apply -target="<specific resource>"
terraform apply -target="aws_s3_object.objects[2]"

# Applies any changes and targets multiple resources at once in your main.tf
terraform apply -target="<specific resource>" -target="<specific resource>"
terraform apply -target="aws_s3_object.objects[2]" -target="aws_s3_object.objects[3]"

# Destroys any changes, but targets only a specfic resource in your infrastructure
terraform destroy -target="aws_s3_bucket_object.objects[2]"

# Destroys the entire collection of bucket objects resources at once in your infrastructure
terraform destroy -target="aws_s3_object.objects"

